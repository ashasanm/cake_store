package main

import (
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"testing"
)

func TestCreateCake(t *testing.T) {

	url := "http://localhost:8080/v1/cakes"

	payload := strings.NewReader("{\n  \"title\": \"Test Cake\",\n  \"description\": \"This Cake is generated by test\",\n  \"rating\": 10,\n  \"image\": \"https://img.taste.com.au/ynYrqkOs/w720-h480-cfill-q80/taste/2016/11/sunny-lemon-cheesecake-102220-1.jpeg\"\n}")

	req, _ := http.NewRequest("POST", url, payload)

	req.Header.Add("Accept", "*/*")
	req.Header.Add("User-Agent", "Thunder Client (https://www.thunderclient.com)")
	req.Header.Add("Content-Type", "application/json")

	res, err := http.DefaultClient.Do(req)

	if err != nil {
		t.Fatalf("There is an error when try to create new cake: %s", err)
	}

	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)

	fmt.Println(res)
	fmt.Println(string(body))
}
func TestGetCakeById(t *testing.T) {

	url := "http://localhost:8080/v1/cakes/3"

	req, _ := http.NewRequest("GET", url, nil)

	req.Header.Add("Accept", "*/*")
	req.Header.Add("User-Agent", "Thunder Client (https://www.thunderclient.com)")

	res, err := http.DefaultClient.Do(req)

	if err != nil {
		t.Fatalf("There is an error when try to fetch cake by id: %s", err)
	}

	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)

	fmt.Println(res)
	fmt.Println(string(body))
}
func TestGetCakeList(t *testing.T) {

	url := "http://localhost:8080/v1/cakes"

	req, _ := http.NewRequest("GET", url, nil)

	req.Header.Add("Accept", "*/*")
	req.Header.Add("User-Agent", "Thunder Client (https://www.thunderclient.com)")

	res, err := http.DefaultClient.Do(req)

	if err != nil {
		t.Fatalf("There is an error when try to fetch List of cake: %s", err)
	}

	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)

	fmt.Println(res)
	fmt.Println(string(body))
}

func TestUpdateCake(t *testing.T) {

	url := "http://localhost:8080/v1/cakes/4"

	payload := strings.NewReader("{\n  \"title\": \"Cookies\",\n  \"description\": \"A Cookies made out of chocolate and cream\",\n  \"rating\": 5.5,\n  \"image\": \"https://img.taste.com.au/ynYrqkOs/w720-h480-cfill-q80/taste/2016/11/sunny-lemon-cheesecake-102220-1.jpeg\"\n}")

	req, _ := http.NewRequest("PATCH", url, payload)

	req.Header.Add("Accept", "*/*")
	req.Header.Add("User-Agent", "Thunder Client (https://www.thunderclient.com)")
	req.Header.Add("Content-Type", "application/json")

	res, err := http.DefaultClient.Do(req)

	if err != nil {
		t.Fatalf("There is an error when Updating cake: %s", err)
	}

	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)

	fmt.Println(res)
	fmt.Println(string(body))
}

func TestDeleteCake(t *testing.T) {
	url := "http://localhost:8080/v1/cakes/2"

	req, _ := http.NewRequest("DELETE", url, nil)

	req.Header.Add("Accept", "*/*")
	req.Header.Add("User-Agent", "Thunder Client (https://www.thunderclient.com)")

	res, err := http.DefaultClient.Do(req)
	if err != nil {
		t.Fatalf("There is an error when deleting cake: %s", err)
	}

	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)

	fmt.Println(res)
	fmt.Println(string(body))
}
